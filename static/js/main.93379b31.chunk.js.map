{"version":3,"sources":["components/Banner.jsx","components/AddTodo.jsx","components/Todoitem.jsx","components/Todos.jsx","components/Footer.jsx","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Banner","state","className","hours","Date","getHours","Greats","to","Component","AddTodo","title","onChange","e","setState","target","name","value","onSubmit","console","log","preventDefault","props","addTodo","this","style","display","type","placeholder","flex","padding","Todoitem","getStyle","textDecoration","todo","complete","id","markComplete","bind","onClick","delTodo","Todos","todos","map","key","protoType","PropTypes","array","isRequired","Footer","About","Fragment","href","App","uuid","filter","newTodo","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.93379b31.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Greats() {\r\n      const date = new Date();\r\n      const hours = date.getHours();\r\n      let timeOfDay;\r\n\r\n      if (hours < 12) {\r\n            timeOfDay = \"Good Morning!!\";\r\n      } else if (hours >= 12 && hours < 17) {\r\n            timeOfDay = \"Good Afternoon!!\";\r\n      } else {\r\n            timeOfDay = \"Good Night!!\";\r\n      }\r\n\r\n      return timeOfDay;\r\n}\r\n\r\nclass Banner extends Component {\r\n      state = {};\r\n      render() {\r\n            return (\r\n                  <div className=\"page-banner\">\r\n                        <div className=\"picture-banner\">\r\n                              <div className=\"row\">\r\n                                    <div className=\"col-8\">\r\n                                          <h2><strong>Shopping</strong> List</h2>\r\n                                          <h3>{Greats()} </h3>\r\n                                          <h3><Link className=\"link-style\" to='/'>Home </Link> |\r\n                              <Link className=\"link-style\" to='/about'> About</Link></h3>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                          <h3> ' ' </h3>\r\n                                    </div>\r\n                              </div>\r\n                        </div>\r\n                  </div>\r\n            );\r\n      }\r\n}\r\n\r\n\r\nexport default Banner;\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n      state = {\r\n            title: ' '\r\n      }\r\n\r\n      onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n      onSubmit = (e) => {\r\n\r\n            console.log(this.state.title);\r\n\r\n            if (this.state.title !== ' ') {\r\n                  e.preventDefault();\r\n                  this.props.addTodo(this.state.title);\r\n                  this.setState({ title: ' ' });\r\n            }\r\n\r\n      }\r\n\r\n      render() {\r\n            return (\r\n                  <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n                        <input\r\n                              type='text'\r\n                              name='title'\r\n                              placeholder='Add Todo...'\r\n                              style={{ flex: '10', padding: '5px' }}\r\n                              value={this.state.title}\r\n                              onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                              type='submit'\r\n                              value='Submit'\r\n                              className='btn-green'\r\n                              style={{ flex: '1' }}\r\n                        />\r\n\r\n                  </form>\r\n            )\r\n      }\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Todoitem extends Component {\r\n\r\n      getStyle = () => {\r\n\r\n            return {\r\n                  textDecoration: this.props.todo.complete ? 'line-through' : 'none'\r\n            }\r\n\r\n      }\r\n\r\n      render() {\r\n\r\n            const { id, title } = this.props.todo;\r\n\r\n            return (\r\n                  <div className=\"page-item\">\r\n                        <div style={this.getStyle()}>\r\n                              <p>\r\n                                    <input type='checkbox' onChange={this.props.markComplete.bind(this, id)} />\r\n                                    {' '} {title}\r\n                                    <button className=\"btn-red\" onClick={this.props.delTodo.bind(this, id)}>X</button>\r\n                              </p>\r\n                        </div>\r\n                  </div>\r\n            )\r\n      }\r\n}\r\n\r\nTodoitem.propTypes = {\r\n      todo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Todoitem\r\n","import React, { Component } from 'react';\r\nimport Todoitem from './Todoitem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n      state = {}\r\n      render() {\r\n            return (\r\n                  <div className=\"page-list\">\r\n                        {this.props.todos.map((todo) => (\r\n                              <Todoitem key={todo.id}\r\n                                    todo={todo}\r\n                                    markComplete={this.props.markComplete}\r\n                                    delTodo={this.props.delTodo} />\r\n                        ))}\r\n                  </div>\r\n            )\r\n      }\r\n}\r\n\r\nTodos.protoType = {\r\n      todos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Todos;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"container\">\r\n        <p>&copy;&nbsp;Copyright Karla Rodrigues</p>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Banner from './Banner';\r\nimport Footer from './Footer';\r\n\r\nfunction About() {\r\n      return (\r\n            <React.Fragment>\r\n                  <Banner />\r\n                  <div className=\"about\">\r\n                        <h1> About </h1>\r\n                        <p> Application developed using react</p>\r\n                        <p> Great helper for shopping</p>\r\n                        <p> October 2020</p>\r\n                        <p> Keep in Contact</p>\r\n                        <ul>\r\n                              <li>\r\n                                    <a href=\"https://www.linkedin.com/in/2karla/\">\r\n                                          <i className=\"fab fa-linkedin fa-2x\"></i></a>\r\n                              </li>\r\n                              <li>\r\n                                    <a href=\"https://github.com/Karla-Rodrigues\">\r\n                                          <i className=\"fab fa-github-square fa-2x\"></i></a>\r\n                              </li>\r\n                              <li>\r\n                                    <a href=\"mailto:karlaadautor@gmail.com\">\r\n                                          <i className=\"fas fa-envelope fa-2x\"></i></a>\r\n                              </li>\r\n                        </ul>\r\n                  </div>\r\n                  <Footer />\r\n            </React.Fragment>\r\n      )\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Banner from './components/Banner';\nimport AddTodo from './components/AddTodo';\nimport Todos from './components/Todos';\nimport About from './components/About'\nimport Footer from './components/Footer';\nimport { v4 as uuid } from 'uuid'\n\n\nclass App extends Component {\n  state = {\n    todos: [\n      {\n        id: uuid(),\n        title: 'milk',\n        complete: false\n      },\n      {\n        id: uuid(),\n        title: 'bread',\n        complete: false\n      },\n      {\n        id: uuid(),\n        title: 'cheese',\n        complete: false\n      },\n      {\n        id: uuid(),\n        title: 'eggs',\n        complete: false\n      }\n    ]\n  };\n\n  markComplete = (id) => {\n\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.complete = !todo.complete\n        }\n        return todo;\n      })\n    })\n\n  }\n\n  // Delete Todo\n  delTodo = (id) => {\n    this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] });\n  }\n\n  // Add Todo\n  addTodo = (title) => {\n    const newTodo = {\n      id: uuid(),\n      title,\n      complete: false\n    }\n    this.setState({ todos: [...this.state.todos, newTodo] });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <div className='container'>\n\n            <Route exact path='/' render={props => (\n              <React.Fragment>\n                <Banner />\n                <AddTodo addTodo={this.addTodo} />\n                <main>\n                  <Todos todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo} />\n                </main>\n                <Footer />\n              </React.Fragment>\n            )} />\n            <Route path='/about' component={About} />\n\n          </div>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}